# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
    set $mod Mod4
# Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l
# Your preferred terminal emulator
# Recommends: foot
    set $term alacritty
    #set $term_cmd alacritty msg create-window || alacritty
    set $term_cmd alacritty --command tmux
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
    set $rofi_cmd rofi -terminal '$term'
# Shows a combined list of the applications with desktop files and
# executables from PATH.
    set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi -display-combi ''
# Shows a list of shutdown related commands
    set $powermenu $rofi_cmd -show p -modi p:"$HOME/.config/rofi/rofi-power-menu --confirm '' --choices 'poweroff/reboot/suspend/hibernate'"
# Command to close current notification
    set $notif_close_cmd dunstctl close
# Command to view past notification
    set $notif_history_cmd dunstctl history-pop
# Command to notify app name and title for urgent windows
    set $notif_urgent_cmd dunstify --appname=$(swaymsg -t get_tree | jq --raw-output '.. | select(.app_id?) | select(.urgent?) | .app_id, .name')

### Output configuration
#
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
    font pango:monospace 8
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#    font pango:Noto Sans Mono 8
# Ugly hack to get rid of title bars
#    font pango:Noto Sans Mono 0

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
#    output * bg /usr/share/backgrounds/default.png fill #404040
    output * bg #404040 solid_color
# You can get the names of your outputs by running: swaymsg -t get_outputs
    output eDP-1 mode 1920x1080@60Hz
    output HDMI-A-1 mode 1920x1080@60Hz
# https://github.com/alebastr/sway-systemd/issues/10#issuecomment-1063278091
# Requires: kanshi
    exec_always "systemctl --user try-reload-or-restart kanshi.service"

### Idle configuration
    set $screen_timeout 60
    set $lock_timeout   300

### Brightness configuration
    set $brightness_step 2

### Volume configuration
    set $volume_limit 200
    set $volume_step 2

### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
    input type:keyboard {
        repeat_rate 50
        repeat_delay 250
        xkb_layout "us"
        xkb_options "caps:escape,shift:both_capslock_cancel"
        xkb_numlock enabled
    }
    input type:touchpad {
        dwt enabled
        tap enabled
        natural_scroll enabled
        middle_emulation enabled
    }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term_cmd

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Close current notification
    bindsym $mod+BackSpace exec $notif_close_cmd
    # View past notification
    bindsym $mod+Shift+BackSpace exec $notif_history_cmd

    # Close current notification
    bindsym $mod+Shift+p exec $powermenu

    # Display a notification for apps that set urgent on themselves
    for_window [urgent=latest] exec $notif_urgent_cmd

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaymsg exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left  focus left
    bindsym $mod+$down  focus down
    bindsym $mod+$up    focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left  focus left
    bindsym $mod+Down  focus down
    bindsym $mod+Up    focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left  move left
    bindsym $mod+Shift+$down  move down
    bindsym $mod+Shift+$up    move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left  move left
    bindsym $mod+Shift+Down  move down
    bindsym $mod+Shift+Up    move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Note: workspaces can have any name you want, not just numbers.
# We just use 0-9 as the default.

    # Define names for default workspaces for which we configure key bindings later on.
    # We use variables to avoid repeating the names in multiple places.
    set $ws1 1
    set $ws2 2
    set $ws3 3
    set $ws4 4
    set $ws5 5
    set $ws6 6
    set $ws7 7
    set $ws8 8
    set $ws9 9
    set $ws0 0

    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws0

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws0
#
# Layout stuff:
#
    # Set title bar border to 1px thick
    titlebar_border_thickness 1
    # Set title bar padding (both horizontal and vertical) to 1px
    titlebar_padding 1

    # Window borders adjacent to screen edges will only be enabled if the
    # workspace has more than one visible child and gaps equal to zero
    hide_edge_borders smart_no_gaps
    # Default workspace layout
    workspace_layout tabbed

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b split h
    bindsym $mod+v split v

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    # Move focus to the child container
    bindsym $mod+z focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left  resize shrink width  10 px or 10 ppt
    bindsym $down  resize grow   height 10 px or 10 ppt
    bindsym $up    resize shrink height 10 px or 10 ppt
    bindsym $right resize grow   width  10 px or 10 ppt

    # Ditto, with arrow keys
    bindsym Left  resize shrink width  10 px or 10 ppt
    bindsym Down  resize grow   height 10 px or 10 ppt
    bindsym Up    resize shrink height 10 px or 10 ppt
    bindsym Right resize grow   width  10 px or 10 ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
